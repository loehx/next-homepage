[{"/Users/alx/Projekte/next-homepage/pages/[[...slug]].tsx":"1","/Users/alx/Projekte/next-homepage/pages/_app.tsx":"2","/Users/alx/Projekte/next-homepage/pages/_document.tsx":"3","/Users/alx/Projekte/next-homepage/src/components/footer/index.tsx":"4","/Users/alx/Projekte/next-homepage/src/components/page/index.tsx":"5","/Users/alx/Projekte/next-homepage/src/components/rich-text/index.tsx":"6"},{"size":1129,"mtime":1643906352331,"results":"7","hashOfConfig":"8"},{"size":565,"mtime":1643957345769,"results":"9","hashOfConfig":"8"},{"size":361,"mtime":1643551137635,"results":"10","hashOfConfig":"8"},{"size":2590,"mtime":1643957165085,"results":"11","hashOfConfig":"8"},{"size":658,"mtime":1643906099677,"results":"12","hashOfConfig":"8"},{"size":675,"mtime":1643959422036,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1dj7uqn",{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alx/Projekte/next-homepage/pages/[[...slug]].tsx",["26"],"/Users/alx/Projekte/next-homepage/pages/_app.tsx",[],"/Users/alx/Projekte/next-homepage/pages/_document.tsx",[],"/Users/alx/Projekte/next-homepage/src/components/footer/index.tsx",[],"/Users/alx/Projekte/next-homepage/src/components/page/index.tsx",[],"/Users/alx/Projekte/next-homepage/src/components/rich-text/index.tsx",[],{"ruleId":"27","severity":1,"message":"28","line":27,"column":63,"nodeType":"29","messageId":"30","endLine":27,"endColumn":66,"suggestions":"31"},"@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["32","33"],{"messageId":"34","fix":"35","desc":"36"},{"messageId":"37","fix":"38","desc":"39"},"suggestUnknown",{"range":"40","text":"41"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"40","text":"42"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",[812,815],"unknown","never"]